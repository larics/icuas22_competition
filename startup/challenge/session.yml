name: icuas_ch
root: ./
startup_window: roscore
pre_window: |
  export UAV_NAMESPACE=red;
  export ARENA_TYPE=<%= @settings["arena"]%>;
  planning_ws
  source challenge_setup.sh
windows:
  - roscore:
      layout:
      panes:
        - roscore
        - export SITL_RITW_TERMINAL="tmux new-window -d -n:ardupilot1"; waitForRos; 
          roslaunch ardupilot_gazebo sim_vehicle.launch 
          enable_console:=false
          additional_arguments:="--no-rebuild"
          parm_file:=$(rospack find icuas22_competition)/parameters/arducopter_nogps.params
        - waitForRos; rosparam set use_sim_time true; roslaunch ardupilot_gazebo mavros.launch
        - waitForRos; rosrun icuas22_competition spawn_ball_at_uav.py __ns:=$UAV_NAMESPACE
  - gazebo:
      layout: tiled
      panes:
        - waitForRos; roslaunch ardupilot_gazebo kopterworx.launch 
          use_sim_time:=true
          enable_magnet:=true
          x:=-10
          gui:=false
          world:=$(rospack find icuas22_competition)/worlds/well_lit.world
        - waitForRos; waitForSimulation; roslaunch larics_gazebo_worlds spawn_arena_v$ARENA_TYPE.launch
        - waitForRos; waitForSimulation; sleep 2; roslaunch larics_gazebo_worlds spawn_alvar_tile.launch 
          x:=$TILE_X yaw:=$TILE_YAW z:=$TILE_Z y:=$TILE_Y
  - arm&takeof:
      layout: tiled
      panes:
        - waitForRos; roslaunch uav_ros_control pid_carrot.launch 
          manual_takeoff:=false
          msf_callback_enable:=true
          odometry:=odometry
          control_type:=pid_cascade_node_yawrate
          default_params:=custom_config/position_control_thrust.yaml
          hold_trajectory:=position_hold/final_trajectory
        - |
          waitForRos
          waitForSysStatus
          rosrun ardupilot_gazebo automatic_takeoff.sh 2 /$UAV_NAMESPACE/odometry
          sleep 20
          rosservice call /$UAV_NAMESPACE/spawn_ball
          rostopic pub --latch /$UAV_NAMESPACE/challenge_started std_msgs/Bool True
  - trajectory:
      layout: tiled
      panes:
        - waitForRos; roslaunch uav_ros_tracker topp_tracker.launch 
          tracker_config:=custom_config/topp_config_custom.yaml
          input_trajectory:=tracker/final_input_trajectory
          input_pose:=tracker/final_input_pose
        - waitForRos; roslaunch icuas22_competition safety_node.launch
  - safety:
      layout: tiled
      panes:
        - waitForRos; roslaunch icuas22_competition global_planner.launch
        - waitForRos; roslaunch icuas22_competition octomap_server.launch
          map_frame_id:=world
          base_link_frame_id:=$UAV_NAMESPACE/base_link
          map_file:=$OCTOMAP_FILE
        - waitForRos; roslaunch uav_ros_gui rqt.launch 
          perspective:=$(rospack find icuas22_competition)/config/challenge_layout.perspective
